# Utiliser une image Docker avec Docker-in-Docker
image: docker:20.10.8-dind

services:
  - name: docker:dind

variables:
  MAVEN_OPTS: >-
    -Dmaven.repo.local=.m2/repository

# Caching Maven repository to reuse dependencies
default:
  before_script:
    - apk add --no-cache maven # Installation de Maven
    - cd TourGuide
    - mkdir -p .m2/repository
    - mvn --version
  cache:
    paths:
      - .m2/repository

# Stages de pipeline
stages:
  - build
  - test
  - package


# Étape 1: Compilation du projet
build_job:
  stage: build
  script:
    # Installation des jar locaux
    - mvn install:install-file -Dfile=libs/gpsUtil.jar -DgroupId=gpsUtil -DartifactId=gpsUtil -Dversion=1.0.0 -Dpackaging=jar
    - mvn install:install-file -Dfile=libs/RewardCentral.jar -DgroupId=rewardCentral -DartifactId=rewardCentral -Dversion=1.0.0 -Dpackaging=jar
    - mvn install:install-file -Dfile=libs/TripPricer.jar -DgroupId=tripPricer -DartifactId=tripPricer -Dversion=1.0.0 -Dpackaging=jar
    # Compilation du projet
    - mvn compile
  only:
    - master
    - dev
  artifacts:
    paths:
      - .m2/repository # Cache Maven à partager avec les autres jobs

# Étape 2: Lancement des tests (les tests de performances sont désactivés pendant la configuration initiale)
test_job:
  stage: test
  script:
      # Installation des jar locaux
    - mvn install:install-file -Dfile=libs/gpsUtil.jar -DgroupId=gpsUtil -DartifactId=gpsUtil -Dversion=1.0.0 -Dpackaging=jar
    - mvn install:install-file -Dfile=libs/RewardCentral.jar -DgroupId=rewardCentral -DartifactId=rewardCentral -Dversion=1.0.0 -Dpackaging=jar
    - mvn install:install-file -Dfile=libs/TripPricer.jar -DgroupId=tripPricer -DartifactId=tripPricer -Dversion=1.0.0 -Dpackaging=jar
    - mvn test 
  only:
    - master
    - dev

# Étape 3: Docker: Construire de l'image après compilation
docker_build:
  stage: package
  script:
    #Construction de l'image Docker
    - apk add --no-cache docker openrc # Installation de Docker si nécessaire
    - dockerd & # Démarrage de deamon Docker
    - sleep 5 # Attendre que Docker démarre
    - docker --version #Vérification que Docker est accessible
    - docker build -t tourguide-app -f TourGuide/Dockerfile TourGuide/
    - docker image ls # Vérification des images Docker
  dependencies:
    - build_job
  only:
    - master
    - dev
  # Sauvegarde du fichier jar généré comme artefact
  artifacts:
    paths:
      - target/*.jar  # Le jar sera sauvegardé comme artefact
