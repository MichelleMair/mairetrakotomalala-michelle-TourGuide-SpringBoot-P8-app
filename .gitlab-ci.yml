# Utiliser une image Docker avec Docker-in-Docker
image: maven:3.8.4-openjdk-17

variables:
  MAVEN_OPTS: >-
    -Dhttps.protocols=TLSv1.2  
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
    -Dorg.slf4j.simpleLogger.showDateTime=true
    -Djava.awt.headless=true
  
  MAVEN_CLI_OPTS: >-
    --batch-mode
    --errors
    --fail-at-end
    --show-version
    --no-transfer-progress
    -DinstallAtEnd=true
    -DdeployAtEnd=true

before_script:
  - java --version
  - mvn --version
  - cd TourGuide
  - mkdir -p .m2/repository

#Mise en cache des dépendances pour accélérer les builds
cache:
  paths:
    - .m2/repository

# Stages de pipeline
stages:
  - build
  - test
  - deploy

# Étape 1: Compilation du projet
build_job:
  stage: build
  script:
    # Installation des jar locaux
    - mvn install:install-file -Dfile=libs/gpsUtil.jar -DgroupId=gpsUtil -DartifactId=gpsUtil -Dversion=1.0.0 -Dpackaging=jar
    - mvn install:install-file -Dfile=libs/RewardCentral.jar -DgroupId=rewardCentral -DartifactId=rewardCentral -Dversion=1.0.0 -Dpackaging=jar
    - mvn install:install-file -Dfile=libs/TripPricer.jar -DgroupId=tripPricer -DartifactId=tripPricer -Dversion=1.0.0 -Dpackaging=jar
    # Compilation du projet
    - mvn $MAVEN_CLI_OPTS compile
  only:
    - master
    - dev
  artifacts:
    paths:
      - .m2/repository # Cache Maven à partager avec les autres jobs
      - TourGuide/target/*.jar

# Étape 2: Execution des tests
test_job:
  stage: test
  script:
      # Installation des jar locaux
    - mvn install:install-file -Dfile=libs/gpsUtil.jar -DgroupId=gpsUtil -DartifactId=gpsUtil -Dversion=1.0.0 -Dpackaging=jar
    - mvn install:install-file -Dfile=libs/RewardCentral.jar -DgroupId=rewardCentral -DartifactId=rewardCentral -Dversion=1.0.0 -Dpackaging=jar
    - mvn install:install-file -Dfile=libs/TripPricer.jar -DgroupId=tripPricer -DartifactId=tripPricer -Dversion=1.0.0 -Dpackaging=jar
    - mvn $MAVEN_CLI_OPTS test 
  only:
    - master
    - dev

# Etape 3: Déploiement de l'artefact jar
deploy_job:
  stage: deploy
  script:
    # Etape de deploiement (copie de l'artefact .jar généré pour la sauvegarde)
    - echo "Déploiement de l'artefact .jar"
  dependencies:
    - build_job
  artifacts:
    paths:
      - TourGuide/target/*.jar #sauvegarde de l'artefact jar
  only:
    - master